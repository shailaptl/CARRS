// Michael G. Merritt - AVR program
// These are our required libraries
#include <avr/io.h>
#include <util/delay.h>

/* CPU frequency for proper time calculation in delay function
* this will change depending on the chip that is used.
* in our case, since we are using the Attiny2313, the CPU
* frequency is 1000000 (8 mega divided by 8) .
*/
#define F_CPU 1000000

int main(void) {
    /* Makes pin 9 (PD5) an input
    * The syntax is pretty easy to follow. If you look at the pin
    * diagram, you will see a P, followed by a letter, the followed
    * by a number. This designates that you are referencing a port (P),
    * the register (in the case of pin 2, the D register), and then
    * the number of the location in that register. So, for example pin #4
    * is PA1 (the second location on Port A). We can use the pins as
    * either inputs or outputs. Here we make pin 9 (PD5) an
    * input.
    */ 
    DDRD &= ~(1 << PD5);
    
    /* Makes pin 18 (PD6) an output
    * This is similar to the input syntax, just notice the OR Equals,
    * as opposed to the AND, and the lack of a tilde. If you haven't
    * gotten into digital logic with ORs and ANDs yet, no worries. I
    * can help explain them in person. 
    */
    DDRD |= (1 << PD6);

    /* Loop
    * Here we are checking out (while true) if we are receiving a signal
    * on a specified pin. If we do receive a signal, then we output via
    * another pin.
    */
    while(1) {
        // Checks to see if the switch is open
        if (PIND & (1 << PD5)) {
            // Turns the output off if the switch is open
            PORTD &= ~(1 << PD6);
        }
        // Switches the output to on if the switch is closed
        else if (PORTD |= (1 << PD6)) {
            PORTD |= (1 << PD6);
        }
    }
    return 0;
}